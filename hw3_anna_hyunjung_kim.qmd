---
title: "hw3_anna_hyunjung_kim"
format: html
editor: visual
---

# Question 1

## 1. Load the required package

```{r}
if (!require("pacman")) install.packages("pacman")
pacman::p_load(pacman, rvest, dplyr, tidyverse, xml2, janitor)
```

## 2. Load the web page

```{r}
library(rvest)
library(stringr)
library(dplyr)

url <- "https://en.wikipedia.org/wiki/List_of_U.S._states_and_territories_by_population"
#url
page <- read_html(url)
```

```{r}
tables <- page %>% html_elements("table")

#tables
length(tables)
```

There are six tables on the web page, I should figure out which is the one I'm looking for. I was working as a web developer before so I can read HTML.

```{r}

tables[[1]] %>% html_table() %>% head()
tables[[2]] %>% html_table() %>% head()
tables[[3]] %>% html_table() %>% head()
#tables[1]
#tables[[1]]
```

```{r}
hw3 <- html_table(tables[[1]], fill = TRUE) 
#View(hw3)
colnames(hw3)
```

I can see on the table first two row is column name, so I should figure out. I will remove first line and modify the second line name.

```{r}
names(hw3) <- as.character(unlist(hw3[1, ]))
#hw3
hw3 <- hw3[-1,]
hw3
```

## 3. The name of columns

```{r}
names(hw3) <- c(
  "state_or_territory", 
  "population_2024", 
  "population_2020", 
  "change_%_2010-2020", 
  "change_abs_2010-2020",
  "seats", 
  "seat_%", 
  "pop_per_elec_vote", 
  "pop_per_seat", 
  "%_us", 
  "%_ec"
)

nrow(hw3) # the number of row is more than number of state
tail(hw3) # I can see it's because of the total

```

## 4. Handle NA

```{r}
hw3[hw3 == "—"] <- NA

hw3
```

## 5. The class of each column

```{r}
sapply(hw3, class) # everything is character

# remove comma and percentage sign

comma_cols <- c(
  "population_2024", "population_2020",
  "change_abs_2010-2020", "pop_per_elec_vote", "pop_per_seat"
)

for (col in comma_cols) {
  hw3[[col]] <- gsub(",", "", hw3[[col]])
  hw3[[col]] <- as.numeric(hw3[[col]])
}

# there are warning, I guess it's because minus sign
hw3[] <- lapply(hw3, function(x) gsub("−", "-", x))

tail(hw3)
```

There are some special character in the number. So I have to handle it.

```{r}
percent_cols <- c(
  "change_%_2010-2020", "seat_%", "%_us", "%_ec", "seats"
)

remove_special <- function(x) {
  x <- gsub("%", "", x)                         
  x <- gsub("\\*", "", x)                       
  x <- str_extract(x, "-?\\d+(,\\d{3})*")       
  as.numeric(x)
}


for (col in percent_cols) {
  hw3[[col]] <- remove_special(hw3[[col]])
}

#hw3

sapply(hw3[percent_cols], class)   
glimpse(hw3)
```

# Question 2

## 1. Load Package

```{r}
library(DBI)
library(duckdb)
```

## 2. Load File

```{r}
con <- dbConnect(
  duckdb(dbdir = "./data/flights.duckdb"),
  read_only = TRUE
)

class(con) 
```

##  

```{r}
dbIsValid(con)
```

```{sql}
#| connection: con
SHOW TABLES;
```

```{sql}
#| connection: con
DESCRIBE;
```

```{sql, connection=con}
DESCRIBE flights;
DESCRIBE airlines;
```

```{sql}
#| connection: con
SELECT *
FROM flights;
```

```{sql}
#| connection: con
SELECT *
FROM airlines
WHERE name = 'United Air Lines Inc.';
```

I found that on the flights table the airlines name is as codes so I found code from airlines. The code of United Air Lines Inc. is 'UA'.

```{sql}
#| connection: con
SELECT *
FROM flights
WHERE carrier = 'UA';
```

As more information, I would like to check how many rows we have.

```{sql}
#| connection: con
SELECT COUNT(*) AS 'Num_of_Q2'
FROM flights
WHERE carrier = 'UA';
```

# Question 3

'Write a SQL query to count the total number of flights for each carrier.'

Before make total, let's check the number of carrier.

```{sql}
#| connection: con
SELECT DISTINCT carrier FROM flights;

SELECT COUNT(DISTINCT carrier) FROM flights;
```

```{sql}
#| connection: con
SELECT carrier, COUNT(*) AS total_of_flight
FROM flights
GROUP BY carrier
ORDER BY total_of_flight DESC;
```

## Closing connection

```{r}
#| label: close-connection
DBI::dbDisconnect(con, shutdown = TRUE)
```
